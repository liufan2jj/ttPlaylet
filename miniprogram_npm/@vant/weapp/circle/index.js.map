{"version":3,"file":"node_modules\\@vant\\weapp\\lib\\circle\\index.js","names":["Object","defineProperty","exports","value","color_1","require","component_1","utils_1","validator_1","version_1","canvas_1","format","rate","Math","min","max","PERIMETER","PI","BEGIN_ANGLE","STEP","VantComponent","props","text","String","lineCap","type","Number","observer","speed","size","this","drawCircle","currentValue","fill","layerColor","WHITE","color","BLUE","_this","setHoverColor","then","strokeWidth","clockwise","Boolean","data","hoverColor","methods","getContext","_a","canIUseCanvas2d","ctx","wx","createCanvasContext","Promise","resolve","dpr","getSystemInfoSync","pixelRatio","createSelectorQuery","in","select","node","exec","res","canvas","inited","width","height","scale","adaptor","isObj","context","LinearColor","createLinearGradient","keys","sort","a","b","parseFloat","map","key","addColorStop","presetCanvas","strokeStyle","beginAngle","endAngle","position","radius","setStrokeStyle","setLineWidth","setLineCap","beginPath","arc","stroke","setFillStyle","renderLayerCircle","renderHoverCircle","formatValue","progress","clearRect","draw","reRender","clearMockInterval","run","interval","setTimeout","abs","clearTimeout","mounted","destroyed"],"sources":["node_modules\\@vant\\weapp\\lib\\circle\\index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../common/color\");\nvar component_1 = require(\"../common/component\");\nvar utils_1 = require(\"../common/utils\");\nvar validator_1 = require(\"../common/validator\");\nvar version_1 = require(\"../common/version\");\nvar canvas_1 = require(\"./canvas\");\nfunction format(rate) {\n    return Math.min(Math.max(rate, 0), 100);\n}\nvar PERIMETER = 2 * Math.PI;\nvar BEGIN_ANGLE = -Math.PI / 2;\nvar STEP = 1;\n(0, component_1.VantComponent)({\n    props: {\n        text: String,\n        lineCap: {\n            type: String,\n            value: 'round',\n        },\n        value: {\n            type: Number,\n            value: 0,\n            observer: 'reRender',\n        },\n        speed: {\n            type: Number,\n            value: 50,\n        },\n        size: {\n            type: Number,\n            value: 100,\n            observer: function () {\n                this.drawCircle(this.currentValue);\n            },\n        },\n        fill: String,\n        layerColor: {\n            type: String,\n            value: color_1.WHITE,\n        },\n        color: {\n            type: null,\n            value: color_1.BLUE,\n            observer: function () {\n                var _this = this;\n                this.setHoverColor().then(function () {\n                    _this.drawCircle(_this.currentValue);\n                });\n            },\n        },\n        type: {\n            type: String,\n            value: '',\n        },\n        strokeWidth: {\n            type: Number,\n            value: 4,\n        },\n        clockwise: {\n            type: Boolean,\n            value: true,\n        },\n    },\n    data: {\n        hoverColor: color_1.BLUE,\n    },\n    methods: {\n        getContext: function () {\n            var _this = this;\n            var _a = this.data, type = _a.type, size = _a.size;\n            if (type === '' || !(0, version_1.canIUseCanvas2d)()) {\n                var ctx = wx.createCanvasContext('van-circle', this);\n                return Promise.resolve(ctx);\n            }\n            var dpr = (0, utils_1.getSystemInfoSync)().pixelRatio;\n            return new Promise(function (resolve) {\n                wx.createSelectorQuery()\n                    .in(_this)\n                    .select('#van-circle')\n                    .node()\n                    .exec(function (res) {\n                    var canvas = res[0].node;\n                    var ctx = canvas.getContext(type);\n                    if (!_this.inited) {\n                        _this.inited = true;\n                        canvas.width = size * dpr;\n                        canvas.height = size * dpr;\n                        ctx.scale(dpr, dpr);\n                    }\n                    resolve((0, canvas_1.adaptor)(ctx));\n                });\n            });\n        },\n        setHoverColor: function () {\n            var _this = this;\n            var _a = this.data, color = _a.color, size = _a.size;\n            if ((0, validator_1.isObj)(color)) {\n                return this.getContext().then(function (context) {\n                    if (!context)\n                        return;\n                    var LinearColor = context.createLinearGradient(size, 0, 0, 0);\n                    Object.keys(color)\n                        .sort(function (a, b) { return parseFloat(a) - parseFloat(b); })\n                        .map(function (key) {\n                        return LinearColor.addColorStop(parseFloat(key) / 100, color[key]);\n                    });\n                    _this.hoverColor = LinearColor;\n                });\n            }\n            this.hoverColor = color;\n            return Promise.resolve();\n        },\n        presetCanvas: function (context, strokeStyle, beginAngle, endAngle, fill) {\n            var _a = this.data, strokeWidth = _a.strokeWidth, lineCap = _a.lineCap, clockwise = _a.clockwise, size = _a.size;\n            var position = size / 2;\n            var radius = position - strokeWidth / 2;\n            context.setStrokeStyle(strokeStyle);\n            context.setLineWidth(strokeWidth);\n            context.setLineCap(lineCap);\n            context.beginPath();\n            context.arc(position, position, radius, beginAngle, endAngle, !clockwise);\n            context.stroke();\n            if (fill) {\n                context.setFillStyle(fill);\n                context.fill();\n            }\n        },\n        renderLayerCircle: function (context) {\n            var _a = this.data, layerColor = _a.layerColor, fill = _a.fill;\n            this.presetCanvas(context, layerColor, 0, PERIMETER, fill);\n        },\n        renderHoverCircle: function (context, formatValue) {\n            var clockwise = this.data.clockwise;\n            // 结束角度\n            var progress = PERIMETER * (formatValue / 100);\n            var endAngle = clockwise\n                ? BEGIN_ANGLE + progress\n                : 3 * Math.PI - (BEGIN_ANGLE + progress);\n            this.presetCanvas(context, this.hoverColor, BEGIN_ANGLE, endAngle);\n        },\n        drawCircle: function (currentValue) {\n            var _this = this;\n            var size = this.data.size;\n            this.getContext().then(function (context) {\n                if (!context)\n                    return;\n                context.clearRect(0, 0, size, size);\n                _this.renderLayerCircle(context);\n                var formatValue = format(currentValue);\n                if (formatValue !== 0) {\n                    _this.renderHoverCircle(context, formatValue);\n                }\n                context.draw();\n            });\n        },\n        reRender: function () {\n            var _this = this;\n            // tofector 动画暂时没有想到好的解决方案\n            var _a = this.data, value = _a.value, speed = _a.speed;\n            if (speed <= 0 || speed > 1000) {\n                this.drawCircle(value);\n                return;\n            }\n            this.clearMockInterval();\n            this.currentValue = this.currentValue || 0;\n            var run = function () {\n                _this.interval = setTimeout(function () {\n                    if (_this.currentValue !== value) {\n                        if (Math.abs(_this.currentValue - value) < STEP) {\n                            _this.currentValue = value;\n                        }\n                        else if (_this.currentValue < value) {\n                            _this.currentValue += STEP;\n                        }\n                        else {\n                            _this.currentValue -= STEP;\n                        }\n                        _this.drawCircle(_this.currentValue);\n                        run();\n                    }\n                    else {\n                        _this.clearMockInterval();\n                    }\n                }, 1000 / speed);\n            };\n            run();\n        },\n        clearMockInterval: function () {\n            if (this.interval) {\n                clearTimeout(this.interval);\n                this.interval = null;\n            }\n        },\n    },\n    mounted: function () {\n        var _this = this;\n        this.currentValue = this.data.value;\n        this.setHoverColor().then(function () {\n            _this.drawCircle(_this.currentValue);\n        });\n    },\n    destroyed: function () {\n        this.clearMockInterval();\n    },\n});\n"],"mappings":"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","ignoreList":[]}